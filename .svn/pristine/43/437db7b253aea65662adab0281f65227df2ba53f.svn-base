package com.bluemobi.zhongyou.adapter;

import android.content.Context;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.bluemobi.zhongyou.R;
import com.bluemobi.zhongyou.bean.OrderGoodsBean;
import com.bluemobi.zhongyou.bean.TypeBean;

import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;

/**
 * Created by ${chenM} on ${2017}.
 */
public class GoodsListDetailAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{
    private Context mContext;
    private SparseArray<List> mArray = new SparseArray<>();

    private static final int VIEW_TYPE_CONTENT = 0x001;
    private static final int VIEW_TYPE_PAYMENT = 0x002;

    private PaymentMethodAdapter.OnPaymentMethodCallBack mCallBack;

    public GoodsListDetailAdapter(Context context, PaymentMethodAdapter.OnPaymentMethodCallBack callBack){
        this.mContext = context;
        this.mCallBack = callBack;
    }

    public void setData(SparseArray<List> array){
        this.mArray = array;
        this.notifyDataSetChanged();
    }

    public SparseArray<List> getData(){
        return this.mArray;
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        if (viewType == VIEW_TYPE_CONTENT){
            View content = LayoutInflater.from(parent.getContext()).inflate(R.layout.goods_list_detail_item_layout,null);
            return new ContentHolder(content);
        }else if (viewType == VIEW_TYPE_PAYMENT){
            View content = LayoutInflater.from(parent.getContext()).inflate(R.layout.goods_list_detail_item_layout,null);
            return new PaymentHolder(content);
        }
        return null;
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
        if (holder instanceof ContentHolder){
            ((ContentHolder) holder).initData(position);
        }else if (holder instanceof  PaymentHolder){
            ((PaymentHolder) holder).initData(position);
        }
    }

    @Override
    public int getItemViewType(int position) {
        if (position == 0){
            return VIEW_TYPE_CONTENT;
        }else if (position == 1){
            return VIEW_TYPE_PAYMENT;
        }
        return super.getItemViewType(position);
    }

    @Override
    public int getItemCount() {
        return mArray.size();
    }

    public class ContentHolder extends RecyclerView.ViewHolder{
        @BindView(R.id.recyclerView)
        public RecyclerView mRecyclerView;
        private GoodsListDetailContentAdapter mGoodsAdapter;

        public ContentHolder(View itemView) {
            super(itemView);
            ButterKnife.bind(this,itemView);
        }

        public void initData(int position){
            List<OrderGoodsBean> list = mArray.get(position);
            mRecyclerView.setLayoutManager(new LinearLayoutManager(mContext));
            mGoodsAdapter = new GoodsListDetailContentAdapter(mContext);
            mRecyclerView.setAdapter(mGoodsAdapter);
            mGoodsAdapter.setData(list);
        }

    }

    public class PaymentHolder extends RecyclerView.ViewHolder{
        @BindView(R.id.recyclerView)
        public RecyclerView mRecyclerView;
        private PaymentMethodAdapter mPaymentAdapter;

        public PaymentHolder(View itemView) {
            super(itemView);
            ButterKnife.bind(this,itemView);
        }

        public void initData(int position){
            List<TypeBean> list = mArray.get(position);
            mRecyclerView.setLayoutManager(new GridLayoutManager(mContext,3));
            mPaymentAdapter = new PaymentMethodAdapter(mCallBack);
            mRecyclerView.setAdapter(mPaymentAdapter);
            mPaymentAdapter.setData(list);
        }

    }
}
