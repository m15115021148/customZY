package com.bluemobi.zhongyou.activity;

import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;
import com.bluemobi.zhongyou.R;
import com.bluemobi.zhongyou.adapter.CommentAdapter;
import com.bluemobi.zhongyou.log.LogUtil;
import com.bluemobi.zhongyou.bean.OrderGoodsBean;
import com.bluemobi.zhongyou.bean.OrderOilsBean;
import com.bluemobi.zhongyou.bean.PrinterBean;
import com.bluemobi.zhongyou.mvp.presenter.base.Presenter;
import com.bluemobi.zhongyou.util.PrintContract;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;

public class PaymentSuccessActivity extends BaseActivity {
    private PaymentSuccessActivity mContext;
    @BindView(R.id.title)
    public TextView mTitle;
    @BindView(R.id.typeLayout)
    public LinearLayout mLayout;
    @BindView(R.id.offerMoney)
    public TextView mOfferMoney;
    @BindView(R.id.oilCardMoney)
    public TextView mOilCardMoney;
    @BindView(R.id.realMoney)
    public TextView mRealMoney;

    private int type = 0;
    private OrderOilsBean mOrderOilsBean;
    private OrderGoodsBean mOrderGoodsBean;
    private View mView;
    private double offerMoney = -1;
    private double oilCardMoney = -1;
    private double realMoney = -1;
    private String payment ;//payment

    @Override
    protected int getLayoutId() {
        return R.layout.activity_payment_success;
    }

    @Override
    protected Presenter getModelView() {
        return null;
    }

    @Override
    protected void initData() {
        mContext = this;
        type = getIntent().getIntExtra("type",0);
        offerMoney = getIntent().getDoubleExtra("offerMoney",-1);
        oilCardMoney = getIntent().getDoubleExtra("oilCardMoney",-1);
        realMoney = getIntent().getDoubleExtra("realMoney",-1);
        payment = getIntent().getStringExtra("payment");
        if (type == 0){
            mTitle.setText(
                    String.format(
                            getResources().getString(R.string.unpaid_title),
                            getResources().getString(R.string.oils)
                    )
            );
            mOrderOilsBean = (OrderOilsBean) getIntent().getSerializableExtra("model");
            mView = initOilsViewLayout(mOrderOilsBean);
        }else {
            mTitle.setText(
                    String.format(
                            getResources().getString(R.string.unpaid_title),
                            getResources().getString(R.string.goods)
                    )
            );
            mOrderGoodsBean = (OrderGoodsBean) getIntent().getSerializableExtra("model");
            mView = initGoodsViewLayout(mOrderGoodsBean);
        }
        mLayout.addView(mView);

        if (offerMoney == -1) {
            mOfferMoney.setVisibility(View.GONE);
        } else {
            mOfferMoney.setVisibility(View.VISIBLE);
            mOfferMoney.setText(String.format(getResources().getString(R.string.pay_success_coupon_money), offerMoney));
        }
        if (oilCardMoney == -1) {
            mOilCardMoney.setVisibility(View.GONE);
        } else {
            mOilCardMoney.setVisibility(View.VISIBLE);
            mOilCardMoney.setText(String.format(getResources().getString(R.string.pay_success_oil_card_money), oilCardMoney));
        }
        if (realMoney == -1) {
            mRealMoney.setVisibility(View.GONE);
        } else {
            mRealMoney.setVisibility(View.VISIBLE);
            mRealMoney.setText(String.format(getResources().getString(R.string.pay_real_money), realMoney));
        }
        if (type == 0){
            printerByte(PrintContract.startPrinter(getPrinterOilModel()));
        }else {
            printerByte(PrintContract.startPrinter(getPrinterGoodsModel()));
        }

    }

    private View initOilsViewLayout(OrderOilsBean model){
        View view = getLayoutInflater().inflate(R.layout.comment_oils_item_layout,null);
        TextView mOrderNumber = view.findViewById(R.id.orderNumber);
        TextView mOrderTime = view.findViewById(R.id.orderTime);
        TextView mOrderTotalPrice = view.findViewById(R.id.orderTotalPrice);
        TextView mOilsGun = view.findViewById(R.id.orderOilGun);
        TextView mOilsNumber = view.findViewById(R.id.orderOilNumber);
        TextView mOilsLiters = view.findViewById(R.id.orderOilsLiters);
        TextView mPrice = view.findViewById(R.id.orderPrice);
        mOrderNumber.setText(
                String.format(
                        mContext.getResources().getString(R.string.order_number),
                        model.getOrderNumber()
                )
        );
        mOrderTime.setText(model.getOrderTime());
        mOrderTotalPrice.setText(String.valueOf(model.getTotalPrice()));
        mOilsGun.setText(String.valueOf(model.getOrderOilGun()));
        mOilsNumber.setText(
                String.format(
                        mContext.getResources().getString(R.string.order_oil_number_unit),
                        model.getOrderOilNumber()
                )
        );
        mOilsLiters.setText(
                String.format(
                        mContext.getResources().getString(R.string.order_number_of_liters_unit),
                        model.getOrderOilLiters()
                )
        );
        mPrice.setText(String.valueOf(model.getOrderPrice()));
        return view;
    }

    private View initGoodsViewLayout(OrderGoodsBean model){
        View view = getLayoutInflater().inflate(R.layout.comment_good_item_layout,null);
        RecyclerView mRecyclerView = view.findViewById(R.id.comment_recyclerView);
        TextView mOrderNumber = view.findViewById(R.id.orderNumber);
        TextView mOrderTime = view.findViewById(R.id.orderTime);
        TextView mOrderTotalPrice = view.findViewById(R.id.orderTotalPrice);

        LinearLayoutManager layoutManager = new LinearLayoutManager(mContext) {
            @Override
            public RecyclerView.LayoutParams generateDefaultLayoutParams() {
                return new RecyclerView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
                        ViewGroup.LayoutParams.WRAP_CONTENT);
            }
        };
        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
        mRecyclerView.setLayoutManager(layoutManager);
        CommentAdapter mAdapter = new CommentAdapter(mContext);
        mRecyclerView.setAdapter(mAdapter);
        mAdapter.setData(model.getGoods());

        mOrderNumber.setText(
                String.format(
                        mContext.getResources().getString(R.string.order_number),
                        model.getOrderNumber()
                )
        );
        mOrderTime.setText(model.getOrderTime());
        mOrderTotalPrice.setText(String.valueOf(model.getTotalPrice()));

        return view;
    }

    private PrinterBean getPrinterOilModel(){
        PrinterBean model = new PrinterBean();
        model.setmTitle(getResources().getString(R.string.printer_title));
        model.setmOrderNumber(getResources().getString(R.string.printer_order_number));
        model.setmTime(getResources().getString(R.string.printer_time));
        model.setmType(getResources().getString(R.string.printer_oil_gun));
        model.setmName(getResources().getString(R.string.printer_oil_number));
        model.setmNumber(getResources().getString(R.string.printer_oil_liters));
        model.setmPrice(getResources().getString(R.string.printer_price));

        model.setOrderNumber(mOrderOilsBean.getOrderNumber());
        model.setTime(mOrderOilsBean.getOrderTime());
        model.setTotalPrice(mOrderOilsBean.getTotalPrice());
        model.setOffer(offerMoney==-1?0:offerMoney);
        model.setActualAmount(offerMoney==-1? mOrderOilsBean.getTotalPrice(): mOrderOilsBean.getTotalPrice()-offerMoney);

        List<PrinterBean.Printers> list = new ArrayList<>();
        PrinterBean.Printers p = new PrinterBean.Printers();
        p.setType(String.valueOf(mOrderOilsBean.getOrderOilGun()));
        p.setName(String.format(getResources().getString(R.string.order_oil_number_unit), mOrderOilsBean.getOrderOilNumber()));
        p.setNumber(String.format(getResources().getString(R.string.order_number_of_liters_unit), mOrderOilsBean.getOrderOilLiters()));
        p.setPrice(mOrderOilsBean.getOrderPrice());
        list.add(p);
        model.setData(list);
        model.setmTotalPrice(getResources().getString(R.string.printer_total_price));
        model.setmOffer(getResources().getString(R.string.printer_offer_money));
        model.setmActualAmount(getResources().getString(R.string.printer_real_money));
        model.setmPayment(getResources().getString(R.string.printer_payment));
        model.setQrTitle(getResources().getString(R.string.printer_qr_title));
        model.setPayment(payment);

        LogUtil.w(JSON.toJSONString(model));
        return model;
    }

    private PrinterBean getPrinterGoodsModel(){
        PrinterBean model = new PrinterBean();
        model.setmTitle(getResources().getString(R.string.printer_title));
        model.setmOrderNumber(getResources().getString(R.string.printer_order_number));
        model.setmTime(getResources().getString(R.string.printer_time));
        model.setmType(getResources().getString(R.string.printer_goods_type));
        model.setmName(getResources().getString(R.string.printer_goods_name));
        model.setmNumber(getResources().getString(R.string.printer_goods_number));
        model.setmPrice(getResources().getString(R.string.printer_price));

        model.setOrderNumber(mOrderGoodsBean.getOrderNumber());
        model.setTime(mOrderGoodsBean.getOrderTime());
        model.setTotalPrice(mOrderGoodsBean.getTotalPrice());
        model.setOffer(offerMoney==-1?0:offerMoney);
        model.setActualAmount(offerMoney==-1? mOrderGoodsBean.getTotalPrice(): mOrderGoodsBean.getTotalPrice()-offerMoney);

        List<PrinterBean.Printers> list = new ArrayList<>();
        List<OrderGoodsBean.Goods> goods = mOrderGoodsBean.getGoods();
        for (OrderGoodsBean.Goods g:goods){
            PrinterBean.Printers p = new PrinterBean.Printers();
            p.setType(g.getType());
            p.setName(g.getName());
            p.setNumber(String.valueOf(g.getNumber()));
            p.setPrice(g.getPrice());
            list.add(p);
        }
        model.setData(list);
        model.setmTotalPrice(getResources().getString(R.string.printer_total_price));
        model.setmOffer(getResources().getString(R.string.printer_offer_money));
        model.setmActualAmount(getResources().getString(R.string.printer_real_money));
        model.setmPayment(getResources().getString(R.string.printer_payment));
        model.setQrTitle(getResources().getString(R.string.printer_qr_title));
        model.setPayment(payment);

        return model;
    }
}
